services:
  # ──────────────────────────────
  # 1. PostgreSQL
  # ──────────────────────────────
  db:
    image: postgres:15
    restart: always
    env_file: .env                # подключаем переменные
    environment:
      POSTGRES_DB:       ${POSTGRES_DB}       # всё берётся из .env
      POSTGRES_USER:     ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data      # постоянные данные
    ports:
      - "15432:5432"                          # хост:контейнер
    # healthcheck нужен, чтобы приложение не стартовало,
    # пока БД ещё не поднялась.
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10

  # ──────────────────────────────
  # 2. Интерактивный psql-клиент
  #    (поднимаем вручную, когда нужен)
  # ──────────────────────────────
  psql:
    image: postgres:15
    profiles: ["tools"]            # НЕ стартует по-умолчанию
    tty: true
    stdin_open: true
    env_file: .env
    depends_on: [db]
    # $$ — двойной $, чтобы избежать преждевременной подстановки
    command: >
      sh -c 'exec psql -h "$${DB_HOST:-db}" -p 5432 -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"'

  # ──────────────────────────────
  # 3. Spring-Boot приложение
  # ──────────────────────────────
  app:
    build:
      context: .
      dockerfile: Dockerfile
      # отключаем BuildKit ТОЛЬКО на этапе build
      args:
        DOCKER_BUILDKIT: "0"
    env_file: .env
    environment:
      # активный профиль Spring
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      # строка подключения к БД внутри кластера Docker
      SPRING_DATASOURCE_URL:  jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8080:8080"                # наружу
    # ждём, пока healthcheck БД скажет «готов»
    depends_on:
      db:
        condition: service_healthy

  # ──────────────────────────────
  # 4. pgAdmin
  # ──────────────────────────────
  pgadmin:
    image: dpage/pgadmin4:latest
    profiles: ["tools"]
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL:    ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on: [db]

# ────────────────────────────────
# 5. Томы (persist-хранилище)
# ────────────────────────────────
volumes:
  db_data:
  pgadmin_data:
